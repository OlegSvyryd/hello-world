<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:ehcache="http://www.springframework.org/schema/cache"
       xmlns:cache="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/cache
            http://www.springframework.org/schema/cache/spring-cache.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- Basic rules -->

    <!-- Allow security annotation -->
    <security:global-method-security secured-annotations="enabled"/>

    <!-- AOP -->
    <aop:aspectj-autoproxy />

    <!-- Enable cache -->
    <cache:annotation-driven />

    <!-- Scanning all classes -->
    <context:component-scan base-package="MVC" />
    <context:component-scan base-package="Aspects" />
    <context:annotation-config />

    <!-- Allow to use annotations -->
    <mvc:annotation-driven />

    <!-- Mapping resources -->
    <mvc:resources mapping="/CSS/**" location="/CSS/" />
    <mvc:resources mapping="/Images/**" location="/Images/" />
    <mvc:resources mapping="/JS/**" location="/JS/" />

    <!-- Allow to use annotations for transaction -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Beans -->
    <!-- Database Source -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}"
        p:initialSize = "3" p:maxActive="10"/>

    <!-- Dao persistence exception(handle db advance exceptions) -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- Session and hibernate -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>MVC.Model.Entity.Users.Users</value>
                <value>MVC.Model.Entity.Users.UserRoles</value>

                <value>MVC.Model.Entity.Store.Store</value>
                <value>MVC.Model.Entity.Store.StoreType</value>

                <value>MVC.Model.Entity.Company.Company</value>
                <value>MVC.Model.Entity.Company.CompanyType</value>

                <value>MVC.Model.Entity.Store.Goods.StoreCatalog</value>
                <value>MVC.Model.Entity.Company.Goods.CompanyCatalog</value>
                <value>MVC.Model.Entity.Company.Goods.GoodsType</value>

                <value>MVC.Model.Entity.Report.Orders</value>

                <!-- Web store section -->
                <value>MVC.Model.Entity.WebStore.WebStore</value>

                <value>MVC.Model.Entity.WebStore.WebOrders</value>

                <value>MVC.Model.Entity.WebStore.BookGoods</value>
                <value>MVC.Model.Entity.WebStore.ShoeGoods</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">${jdbc.hcscc}</prop>
                <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->
                <!--
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                -->

            </props>
        </property>
    </bean>

    <!-- Transactions -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- Configuration for web.xml -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix">
            <value>/WEB-INF/Pages/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <!-- Hashing password -->
    <bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="10" />
    </bean>

    <!-- JSON -->
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="prefixJson" value="false"/>
        <property name="supportedMediaTypes" value="application/json"/>
    </bean>

    <!-- Caching -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheCacheManager"
            p:cacheManager-ref="ehcache"/>

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="WEB-INF/ehcache.xml"
          p:shared="true"/>

    <!-- Load image (submit form)-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000"/>
    </bean>

    <!-- Mailing -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="test@gmail.com" />
        <property name="password" value="test" />

        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>

    <bean id="mailing" class="MVC.Model.Entity.Report.Mailing">
        <property name="mailSender" ref="mailSender" />
    </bean>

</beans>